Total: 1316 samples
    1012  76.9%  76.9%     1015  77.1% spin_lock_and_time
     241  18.3%  95.2%      241  18.3% __strcmp_sse42
      33   2.5%  97.7%      157  11.9% SortedList_lookup
      20   1.5%  99.2%      142  10.8% SortedList_insert
       5   0.4%  99.6%        5   0.4% _init
       2   0.2%  99.8%        2   0.2% 0x00007ffc1c37d7c2
       2   0.2%  99.9%     1316 100.0% list_fun
       1   0.1% 100.0%        3   0.2% __clock_gettime
       0   0.0% 100.0%     1316 100.0% __clone
       0   0.0% 100.0%     1015  77.1% lock_and_time
       0   0.0% 100.0%     1316 100.0% start_thread
       0   0.0% 100.0%     1316 100.0% thread_func
ROUTINE ====================== spin_lock_and_time in /u/cs/ugrad/rohan/cs-111/p2b/lab2_list.c
  1012   1015 Total samples (flat / cumulative)
     .      .   66:     hash ^= (hash >> 11);
     .      .   67:     hash += (hash << 15);
     .      .   68:     return hash;
     .      .   69: }
     .      .   70: //spinlock and time
---
     .      .   71: void spin_lock_and_time(int idx, struct timespec * total){
     .      .   72:   struct timespec start, end;
     .      1   73:   if(clock_gettime(CLOCK_MONOTONIC_RAW, &start) < 0) err_exit("clock gettime errror", errno);
  1012   1012   74:   while (__sync_lock_test_and_set(&mlist.lists[idx].spinlock, 1) == 1) ; //spin
     .      2   75:   if(clock_gettime(CLOCK_MONOTONIC_RAW, &end) < 0) err_exit("clock gettime error", errno);
     .      .   76:   total->tv_sec += end.tv_sec - start.tv_sec;
     .      .   77:   total->tv_nsec += end.tv_nsec - start.tv_nsec;
     .      .   78: }
---
     .      .   79: 
     .      .   80: //mutex lock and time
     .      .   81: void pthread_mutex_lock_and_time(int idx, struct timespec *total){
     .      .   82:   struct timespec start, end, diff; 
     .      .   83:   if(clock_gettime(CLOCK_MONOTONIC_RAW, &start) < 0) err_exit("clock gettime errror", errno);
ROUTINE ====================== spin_lock_and_time in /u/cs/ugrad/rohan/cs-111/p2b/lab2_list.c
  1012   1015 Total samples (flat / cumulative)
     .      .   66:     hash ^= (hash >> 11);
     .      .   67:     hash += (hash << 15);
     .      .   68:     return hash;
     .      .   69: }
     .      .   70: //spinlock and time
---
     .      .   71: void spin_lock_and_time(int idx, struct timespec * total){
     .      .   72:   struct timespec start, end;
     .      1   73:   if(clock_gettime(CLOCK_MONOTONIC_RAW, &start) < 0) err_exit("clock gettime errror", errno);
  1012   1012   74:   while (__sync_lock_test_and_set(&mlist.lists[idx].spinlock, 1) == 1) ; //spin
     .      2   75:   if(clock_gettime(CLOCK_MONOTONIC_RAW, &end) < 0) err_exit("clock gettime error", errno);
     .      .   76:   total->tv_sec += end.tv_sec - start.tv_sec;
     .      .   77:   total->tv_nsec += end.tv_nsec - start.tv_nsec;
     .      .   78: }
---
     .      .   79: 
     .      .   80: //mutex lock and time
     .      .   81: void pthread_mutex_lock_and_time(int idx, struct timespec *total){
     .      .   82:   struct timespec start, end, diff; 
     .      .   83:   if(clock_gettime(CLOCK_MONOTONIC_RAW, &start) < 0) err_exit("clock gettime errror", errno);
